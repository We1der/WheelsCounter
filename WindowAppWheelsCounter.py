# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'WheelsCounterDesign.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QRegExp
from PyQt5.QtGui import QRegExpValidator


def wheels_counter(window, donation_sum, wheel_price, hand_of_midas_turn):
    """_summary_

    Args:
        donation_sum (int): Сумма донатов которую нужно посчитать
        wheel_price (int): Цена колеса от которой нужно посчитать
        hand_of_midas_turn (int): Номер колеса на котором выпала рука мидаса

    Returns:
        result_text: Возвращаем сформированный текст, в котром указываем как проводились подсчёты
    """
    wheel_count = 0  # счётчик колёс
    result_text = ""
    # пока сумма донатов больше цены колеса
    while wheel_price < donation_sum:
        # проверка на руку мидаса
        if (wheel_count == hand_of_midas_turn) or (wheel_count+1 == hand_of_midas_turn):
            result_text += (f'Количество колёс: {wheel_count}. Остаток: {donation_sum} ₽. Следующее колесо: 1500 ₽\n')
            donation_sum -= 1500
            wheel_count += 1            
        else:
            result_text += (f'Количество колёс: {wheel_count}. Остаток: {donation_sum} ₽. Следующее колесо: {wheel_price} ₽\n')
            donation_sum -= wheel_price
            wheel_price += 500
            wheel_count += 1
    result_text += (f'Количество колёс: {wheel_count}. Остаток: {donation_sum} ₽. Следующее колесо: {wheel_price} ₽\n')
    return result_text


class Ui_MainWindow(object):
    
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(1000, 290)
        MainWindow.setMinimumSize(QtCore.QSize(1000, 290))
        MainWindow.setMaximumSize(QtCore.QSize(1000, 290))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # RESULT TEXT BOX
        self.result_textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.result_textEdit.setEnabled(False)
        self.result_textEdit.setGeometry(QtCore.QRect(230, 10, 750, 255))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.result_textEdit.setFont(font)
        self.result_textEdit.setObjectName("result_textEdit")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
                        

        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 10, 210, 254))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)        
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        nums_regex = QRegExp("^\d+$")
        nums_validator = QRegExpValidator(nums_regex, MainWindow)

        # DONATION SUM LABEL
        self.donation_sum_label = QtWidgets.QLabel(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.donation_sum_label.setFont(font)
        self.donation_sum_label.setObjectName("donation_sum_label")
        self.verticalLayout_3.addWidget(self.donation_sum_label)

        # DONATION SUM INPUT
        self.donation_sum_lineEdit = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.donation_sum_lineEdit.setFont(font)
        self.donation_sum_lineEdit.setObjectName("donation_sum_lineEdit")
        self.verticalLayout_3.addWidget(self.donation_sum_lineEdit)
        self.donation_sum_lineEdit.setValidator(nums_validator)
        

        # CUR WHEEL PRICE LABEL
        self.cur_wheel_price_label = QtWidgets.QLabel(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.cur_wheel_price_label.setFont(font)
        self.cur_wheel_price_label.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.cur_wheel_price_label.setToolTipDuration(-3)
        self.cur_wheel_price_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.cur_wheel_price_label.setAutoFillBackground(False)
        self.cur_wheel_price_label.setObjectName("cur_wheel_price_label")
        self.verticalLayout_3.addWidget(self.cur_wheel_price_label)

        # CUR WHEEL PRICE INPUT
        self.cur_wheel_price_lineEdit = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.cur_wheel_price_lineEdit.setFont(font)
        self.cur_wheel_price_lineEdit.setObjectName("cur_wheel_price_lineEdit")
        self.verticalLayout_3.addWidget(self.cur_wheel_price_lineEdit)
        self.cur_wheel_price_lineEdit.setValidator(nums_validator)

        # HAND OF MIDAS CHECKBOX
        self.hand_of_midas_checkBox = QtWidgets.QCheckBox(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.hand_of_midas_checkBox.setFont(font)
        self.hand_of_midas_checkBox.setTristate(False)
        self.hand_of_midas_checkBox.setObjectName("hand_of_midas_checkBox")
        self.verticalLayout_3.addWidget(self.hand_of_midas_checkBox)
        self.hand_of_midas_checkBox.clicked.connect(self.on_changed)

        # HAND OF MIDAS LABEL (IF CHECKBOX IS FALSE DISABLED)
        self.hand_of_midas_label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.hand_of_midas_label.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.hand_of_midas_label.setFont(font)
        self.hand_of_midas_label.setAutoFillBackground(False)
        self.hand_of_midas_label.setScaledContents(False)
        self.hand_of_midas_label.setObjectName("hand_of_midas_label")
        self.verticalLayout_3.addWidget(self.hand_of_midas_label)

        # HAND OF MIDAS INPUT (IF CHECKBOX IS FALSE DISABLED)
        self.hand_of_midas_lineEdit = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.hand_of_midas_lineEdit.setEnabled(False)
        self.hand_of_midas_lineEdit.setText("-1")
        font = QtGui.QFont()
        font.setPointSize(11)
        self.hand_of_midas_lineEdit.setFont(font)
        self.hand_of_midas_lineEdit.setObjectName("hand_of_midas_lineEdit")
        self.verticalLayout_3.addWidget(self.hand_of_midas_lineEdit)
        self.hand_of_midas_lineEdit.setValidator(nums_validator)
        

        # BUTTON TO CALL COUNTER
        self.count_button = QtWidgets.QPushButton(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(11)        
        self.count_button.setFont(font)
        self.count_button.setObjectName("count_button")
        self.verticalLayout_3.addWidget(self.count_button)
        self.count_button.clicked.connect(self.on_click)

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
    
    def on_click(self):
        # Обработчик кнопки расчёта
        try:
            result = wheels_counter(
                        self,
                        int(self.donation_sum_lineEdit.text()),
                        int(self.cur_wheel_price_lineEdit.text()),
                        int(self.hand_of_midas_lineEdit.text())
                    )         
        except ValueError as e:
            result = "Ошибка в вводе! Стример, пожалуйста, проверь поля ввода <3"
                    
        self.result_textEdit.setText(result)   
        self.result_textEdit.setEnabled(True)
        

    def on_changed(self):
        if self.hand_of_midas_label.isEnabled() and self.hand_of_midas_lineEdit.isEnabled():
            self.hand_of_midas_label.setEnabled(False)
            self.hand_of_midas_lineEdit.setEnabled(False)
            self.hand_of_midas_lineEdit.setText("-1")
        else:
            self.hand_of_midas_label.setEnabled(True)
            self.hand_of_midas_lineEdit.setEnabled(True)
            self.hand_of_midas_lineEdit.setText("")

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Wheels counter"))
        self.donation_sum_label.setText(_translate("MainWindow", "Сумма донатов (без копеек):"))
        self.cur_wheel_price_label.setText(_translate("MainWindow", "Цена колеса от \n"
"которой делать отсчёт:"))
        self.hand_of_midas_checkBox.setText(_translate("MainWindow", "Выпала рука мидаса?"))
        self.hand_of_midas_label.setText(_translate("MainWindow", "Номера колеса на \n"
"котором выпала рука мидаса:"))
        self.count_button.setText(_translate("MainWindow", "Рассчитать колёса"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
